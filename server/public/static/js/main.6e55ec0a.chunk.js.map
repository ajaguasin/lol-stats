{"version":3,"sources":["components/Layout.js","components/Results.js","components/SummonerInput.js","App.js","serviceWorker.js","index.js"],"names":["Layout","props","react_default","a","createElement","Container","children","Results","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Fragment","summonerGameDetails","Table","celled","Header","Row","HeaderCell","singleLine","Body","Cell","stats","win","summonerName","championId","champLevel","neutralMinionsKilled","totalMinionsKilled","Component","SummonerInput","state","inputError","undefined","onInputChange","e","_ref","value","_this","setState","handleSubmit","_callee","regenerator_default","wrap","_context","prev","next","fetch","concat","then","res","json","result","t0","console","log","stop","_this2","Form","onSubmit","Field","Input","label","placeholder","onChange","error","components_Results","mydetails","matchDetails","match","App","className","components_Layout","components_SummonerInput","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e55ec0a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\n\nconst Layout = props => {\n  return <Container>{props.children}</Container>;\n};\n\nexport default Layout;\n","import React, { Component } from \"react\";\nimport { Table } from \"semantic-ui-react\";\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.summonerGameDetails && (\n          <Table celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell singleLine>Outcome</Table.HeaderCell>\n                <Table.HeaderCell>Game Duration</Table.HeaderCell>\n                <Table.HeaderCell>Summoner Name</Table.HeaderCell>\n                <Table.HeaderCell>Summoner Spells</Table.HeaderCell>\n                <Table.HeaderCell>Summoner Runes</Table.HeaderCell>\n                <Table.HeaderCell>Champion Name</Table.HeaderCell>\n                <Table.HeaderCell>K/DA</Table.HeaderCell>\n                <Table.HeaderCell>Items Bought</Table.HeaderCell>\n                <Table.HeaderCell>Champion Level</Table.HeaderCell>\n                <Table.HeaderCell>Creep Score</Table.HeaderCell>\n                <Table.HeaderCell>Creep Score / Min</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell>\n                  {this.props.summonerGameDetails.stats.win\n                    ? \"Victory\"\n                    : \"Defeat\"}\n                </Table.Cell>\n                <Table.Cell>\n                  {/* {this.props.summonerGameDetails.matchDetails.gameDuration} */}\n                </Table.Cell>\n                <Table.Cell>{this.props.summonerName}</Table.Cell>\n                <Table.Cell>Spells</Table.Cell>\n                <Table.Cell>Runes</Table.Cell>\n                <Table.Cell>\n                  {this.props.summonerGameDetails.championId}\n                </Table.Cell>\n                <Table.Cell>K/DA</Table.Cell>\n                <Table.Cell>Items</Table.Cell>\n                <Table.Cell>\n                  {this.props.summonerGameDetails.stats.champLevel}\n                </Table.Cell>\n                <Table.Cell>\n                  Neutral:\n                  {this.props.summonerGameDetails.stats.neutralMinionsKilled}\n                  <br />\n                  Total:{\" \"}\n                  {this.props.summonerGameDetails.stats.totalMinionsKilled}\n                </Table.Cell>\n                <Table.Cell>Creep Score/Min</Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Results;\n","import React, { Component } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport Results from \"./Results\";\nclass SummonerInput extends Component {\n  state = {\n    summonerName: \"\",\n    inputError: false,\n    summonerGameDetails: undefined\n  };\n\n  onInputChange = (e, { value }) => {\n    this.setState({ summonerName: value });\n  };\n\n  handleSubmit = async () => {\n    try {\n      await fetch(`/summoner?summonerName=${this.state.summonerName}`)\n        .then(res => res.json())\n        .then(result => {\n          this.setState({ summonerGameDetails: result });\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Form\n          onSubmit={e => {\n            this.handleSubmit(e);\n          }}\n        >\n          <Form.Field>\n            <label>League Stats</label>\n            <Form.Input\n              label=\"Summoner Name\"\n              placeholder=\"Enter Summoner Name\"\n              value={this.state.summonerName}\n              onChange={this.onInputChange}\n              error={this.state.inputError}\n            />\n          </Form.Field>\n        </Form>\n\n        {this.state.summonerGameDetails && (\n          <Results\n            summonerGameDetails={this.state.summonerGameDetails.mydetails}\n            matchDetails={this.state.summonerGameDetails.match}\n            summonerName={this.state.summonerName}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default SummonerInput;\n","import React, { Component } from \"react\";\nimport Layout from \"./components/Layout\";\nimport SummonerInput from \"./components/SummonerInput\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout>\n          <SummonerInput />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}